{
	"info": {
		"_postman_id": "1571d7a5-61e4-4d76-83ef-23e25cd034ef",
		"name": "Gorest Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"user_id\", jsonData[\"id\"]);",
							"",
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"User created/updated with proper ID\", function () {",
							"    var userId = pm.collectionVariables.get(\"user_id\")",
							"    pm.expect(userId).to.equal(6052);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Test User\", \n    \"email\":\"test_user@test.testdata.com\", \n    \"gender\": \"female\",\n    \"status\":\"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/6052",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"6052"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List of posts is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.legth).to.not.eql(0);",
							"}); ",
							"",
							"const schema = {",
							"    \"type\": \"array\",",
							"    \"minItems\": 1,",
							"    \"items\": [",
							"        {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"user_id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"body\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id\",",
							"                \"user_id\",",
							"                \"title\",",
							"                \"body\"",
							"            ]",
							"        }",
							"      ]",
							"};",
							"",
							"pm.test(\"Json Schema is valid\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Auth failed message in response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "post - negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {",
							"    pm.response.to.have.status(422);",
							"});",
							"",
							"var err_response = [",
							"    {",
							"        \"field\": \"user\",",
							"        \"message\": \"must exist\"",
							"    },",
							"    {",
							"        \"field\": \"user_id\",",
							"        \"message\": \"can't be blank\"",
							"    },",
							"    {",
							"        \"field\": \"title\",",
							"        \"message\": \"can't be blank\"",
							"    },",
							"    {",
							"        \"field\": \"body\",",
							"        \"message\": \"can't be blank\"",
							"    }",
							"]",
							"",
							"pm.test(\"User field is required\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql(err_response);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \n}"
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"user_id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"body\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"id\",",
							"        \"user_id\",",
							"        \"title\",",
							"        \"body\"",
							"    ]",
							"};",
							"pm.collectionVariables.set(\"post_schema\", schema);",
							"pm.collectionVariables.set(\"post_id\", jsonData[\"id\"]);",
							"",
							"pm.test(\"Json Schema is valid\", function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user\":\"Test User\",\n    \"user_id\":\"{{user_id}}\",\n    \"title\":\"Famous Post Number 1\",\n    \"body\":\"This will be a long post about my life and adventures\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = pm.collectionVariables.get(\"post_schema\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Json Schema is valid\", function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Title properly updated\", function () {",
							"    pm.expect(jsonData.title).to.eql(\"Super Famous Post. With a Number 1 as a title\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"Super Famous Post. With a Number 1 as a title\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts/{{post_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts/{{post_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - absent resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Resource not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts/{{post_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - absent resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Resource not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/posts/{{post_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "post_id",
			"value": ""
		},
		{
			"key": "post_schema",
			"value": ""
		}
	]
}